(()=>{"use strict";var __webpack_modules__={561:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VSHAuto=void 0;const vscode=__webpack_require__(496),fileUtil_1=__webpack_require__(963);__webpack_require__(659);const TerminalUtil_1=__webpack_require__(659),EditorUtil_1=__webpack_require__(673),defaultTemplates_1=__webpack_require__(499);var TerminalUtil=TerminalUtil_1.default,EditorUtil=EditorUtil_1.default;class VSHAuto{static showCommandsInPickUp(context){const SCRIPT_PATH=context.extensionPath.replace(/\\/g,"/")+"/scripts";VSHAuto.createScriptFolderIfNotExists(SCRIPT_PATH),fileUtil_1.FileUtil.createFolderIfNotExists(SCRIPT_PATH);let scriptNames=fileUtil_1.FileUtil.getDirectoryFilesList(SCRIPT_PATH),scriptNameWithoutExt=fileUtil_1.FileUtil.removeExtension(SCRIPT_PATH);vscode.window.showQuickPick(scriptNameWithoutExt).then((selection=>{let selectedIndex=scriptNameWithoutExt.indexOf(""+selection),selectedFilePath=`${SCRIPT_PATH}/${scriptNames[selectedIndex]}`,fileContent=__webpack_require__(147).readFileSync(selectedFilePath).toString();eval(fileContent)}))}static createScriptFolderIfNotExists(e){const t=__webpack_require__(147);if(!t.existsSync(e)){t.mkdirSync(e);let i=defaultTemplates_1.default.get();for(let n=0;n<i.length;n++){const o=i[n],r=`${e}/${o.fileName}`;t.writeFileSync(r,o.template,{encoding:"utf8"})}}}}exports.VSHAuto=VSHAuto},499:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=class{static get(){return[{fileName:"01 - open scritps in vscode project.js",template:"const vscode = require('vscode');\n\n        TerminalUtil.executeCommandInTerminal(`code '${SCRIPT_PATH}'`);"},{fileName:"02 - open scripts in this vscode instance.js",template:"const vscode = require('vscode');\n\n        let workspaceFolders = vscode.workspace.workspaceFolders;\n        \n        vscode.workspace.updateWorkspaceFolders(workspaceFolders ? workspaceFolders.length : 0,\n            null,\n            {\n                uri: vscode.Uri.file(SCRIPT_PATH),\n                name: require('path').basename(SCRIPT_PATH)\n            });\n        "},{fileName:"03 - edit file.js",template:"const vscode = require('vscode');\n\n        let fileContent = EditorUtil.getSelectedFileContent();\n        \n        let changedFileContent = `this file content was changed the original content is >>>\n ${fileContent} \n>>> end of original content`;\n        \n        EditorUtil.setSelectedFileContent(changedFileContent);"},{fileName:"04 - insert text at cursor position.js",template:"const vscode = require('vscode');\n\n        EditorUtil.insertText(\"<INSERTED AT CURSOR>\");"},{fileName:"05 - edit selected text.js",template:"const vscode = require('vscode');\n\n        EditorUtil.insertInSelection(\"CHANGED\");"},{fileName:"06 - save current file.js",template:"const vscode = require('vscode');\n\n        vscode.commands.executeCommand('workbench.action.files.save');"},{fileName:"07 - messagebox example.js",template:"const vscode = require('vscode');\n\n        vscode.window.showInformationMessage('HELLO!!!');"},{fileName:"08 - webview example.js",template:"const vscode = require('vscode');\n\n        const panel = vscode.window.createWebviewPanel(\n            'indentifierID', \n            'Window Title',\n            vscode.ViewColumn.One,\n            {}\n        );\n        \n        panel.webview.html = `\n            <html>\n        \n            <head>\n            </head>\n        \n            <body>\n               <h1>My WebView</h1>\n            </body>\n        \n            </html>\n        `;"},{fileName:"09 - execute command in terminal.js",template:"const vscode = require('vscode');\n\n        TerminalUtil.executeCommandInTerminal(\"ls\");"},{fileName:"10 - get paths.js",template:"const vscode = require('vscode');\n\n        let filePath = EditorUtil.getSelectedFileName();\n        let fileFolderPath = EditorUtil.getSelectedFileFolder();\n        let workspacePath = vscode.workspace.workspaceFolders.length > 0 ? vscode.workspace.workspaceFolders[0].uri.fsPath : '';\n        \n        TerminalUtil.executeCommandInTerminal(`echo 'selected file: ${filePath}'`);\n        TerminalUtil.executeCommandInTerminal(`echo 'selected file folder: ${fileFolderPath}'`);\n        TerminalUtil.executeCommandInTerminal(`echo 'workspace folder: ${workspacePath}'`);"}]}}},673:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(496),o=i(496);class r{static openFile(e){var t=o.Uri.parse("file:///"+e);o.workspace.openTextDocument(t).then((e=>{o.window.showTextDocument(e)}))}static getSelectedFileFolder(){let e=r.getSelectedFileName();return null==e?null:i(17).dirname(e)}static getSelectedFileName(){return null==o.window.activeTextEditor?null:o.window.activeTextEditor.document.fileName}static getSelectedFileContent(){return null==o.window.activeTextEditor?"":o.window.activeTextEditor.document.getText()}static setSelectedFileContent(e){null!=o.window.activeTextEditor&&o.window.activeTextEditor.edit((t=>{t.delete(new n.Range(new n.Position(0,0),new n.Position(o.window.activeTextEditor.document.lineCount-1,r.getSelectedFileContent().length))),t.insert(new o.Position(0,0),e)}))}static insertText(e){null!=o.window.activeTextEditor&&o.window.activeTextEditor.edit((t=>{t.insert(o.window.activeTextEditor.selection.end,e)}))}static insertInSelection(e){null!=o.window.activeTextEditor&&o.window.activeTextEditor.edit((t=>{let i=o.window.activeTextEditor.selection.end;t.delete(o.window.activeTextEditor.selection),t.insert(i,e)}))}}t.default=r},659:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0});const n=i(496);class o{static executeCommandInTerminal(e){o.getActiveOrOpenNewTerminal().then((t=>{t.sendText(e)}))}static getActiveOrOpenNewTerminal(){return new Promise(((e,t)=>{n.window.activeTerminal&&e(n.window.activeTerminal),n.commands.executeCommand("workbench.action.terminal.toggleTerminal").then((()=>{var i=100,o=setInterval((function(){n.window.activeTerminal?e(n.window.activeTerminal):--i<1&&(clearInterval(o),t())}),100)}),(()=>{t()}))}))}}t.default=o},963:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.FileUtil=void 0,t.FileUtil=class{static createFolderIfNotExists(e){const t=i(147);t.existsSync(e)||t.mkdirSync(e,{recursive:!0})}static getDirectoryFilesList(e){const t=i(147);return i(17),t.readdirSync(e)}static removeExtension(e){const t=i(147),n=i(17);let o=t.readdirSync(e);for(let e=0;e<o.length;e++)o[e]=n.parse(o[e]).name;return o}}},496:e=>{e.exports=require("vscode")},147:e=>{e.exports=require("fs")},17:e=>{e.exports=require("path")}},__webpack_module_cache__={};function __webpack_require__(e){var t=__webpack_module_cache__[e];if(void 0!==t)return t.exports;var i=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](i,i.exports,__webpack_require__),i.exports}var __webpack_exports__={};(()=>{var e=__webpack_exports__;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const t=__webpack_require__(496),i=__webpack_require__(561);e.activate=function(e){let n=t.commands.registerCommand("vshauto.showCommands",(()=>{i.VSHAuto.showCommandsInPickUp(e)}));e.subscriptions.push(n)},e.deactivate=function(){}})(),module.exports=__webpack_exports__})();